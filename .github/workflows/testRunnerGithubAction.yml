# name: saucectl cypress tests

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# env:
#   SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
#   SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
#   SAUCECTL_VERSION: 0.176.0
#   BUILD_PREFIX: true
#   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   build-web-app:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'
#       - name: Install Dependencies
#         run: npm install

#   test-web-app:
#     runs-on: ubuntu-latest
#     needs: build-web-app
#     steps:
#       - name: Checkout GitHub App Code
#         uses: actions/checkout@v4
#       - name: Install Dependencies
#         run: npm install
#       - name: Start Local Server
#         run: |
#           npm run dev &  # Start your local server in the background
#           for i in {1..30}; do
#             curl -sSf http://localhost:5173 && break
#             echo "Waiting for server to start..."
#             sleep 5
#           done
#       # - name: Download & Use Sauce Connect Tunnel  # manually downlaod
#       #   run: |
#       #     set -e
#       #     curl -L -s https://saucelabs.com/downloads/sauce-connect/5.1.0/sauce-connect-5.1.0_linux.x86_64.tar.gz | sudo tar -xz
#       #     # sc-5.1.0-linux/bin/sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY -i proxy-tunnel-$GITHUB_RUN_ID &
#       #     sc run -u oauth-sujeetsahu294-e4685 -k *****7250 --region eu-central --tunnel-name oauth-sujeetsahu294-e4685_tunnel_name
#       #     sleep 20  # Wait for the Sauce Connect tunnel to establish
#       # - name: Install Saucect   #manual installation
#       #   run: |
#       #     curl -L -s https://github.com/saucelabs/saucectl/releases/download/v${SAUCECTL_VERSION}/saucectl_${SAUCECTL_VERSION}_linux_64-bit.tar.gz | sudo tar -xz -C /usr/bin/
#       - name: Saucectl RUN
#         uses: saucelabs/saucectl-run-action@v3
#         with:
#           config-file: .sauce/config.yml
#           tunnel-name: github-action-tunnel
#           # tunnel-name: oauth-sujeetsahu294-e4685_tunnel_name
#         env:
#           SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
#           SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}







name: saucectl cypress tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCECTL_VERSION: 0.176.0
  BUILD_PREFIX: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # build-web-app:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '20'
  #     - name: Install Dependencies
  #       run: npm install

  test-web-app:
    runs-on: ubuntu-latest
    needs: build-web-app
    steps:
      - name: Checkout GitHub App Code
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install
      # - name: Start Local Server
      #   run: |
      #     npm run dev &  # Start your local server in the background
      #     for i in {1..30}; do
      #       curl -sSf http://localhost:5173 && break
      #       echo "Waiting for server to start..."
      #       sleep 5
      #     done
      - name: Start Local Server
        run: |
          echo "Starting local server..."
          npm run dev &  # Start your local server in the background
          echo "Waiting for server to start..."
          for i in {1..60}; do
            if curl -sSf http://localhost:5173 > /dev/null; then
              echo "Server is up and running!"
              break
            else
              echo "Attempt $i: Server is not yet ready, retrying in 5 seconds..."
               sleep 5
            fi  
          done
          if [ $i -eq 60 ]; then
            echo "Server did not start within the expected time."
            exit 1
          fi
        shell: /usr/bin/bash -e {0}
      - name: Verify Server  #verify comments
        run: curl -I http://localhost:5173
      - name: Create PID File Directory
        run: |
         mkdir -p /tmp/sc_client-sahuSujeet/githubactiontests-9443806221
         ls -la /tmp  # Print out the contents of /tmp for debugging
      - name: Download and Set up Sauce Connect
        uses: saucelabs/sauce-connect-action@v2  # The saucelabs/sauce-connect-action step in your GitHub Actions workflow downloads and sets up Sauce Connect Proxy. 
        with:                                    
          username: ${{ secrets.SAUCE_USERNAME }}  #Sauce Connect Proxy is configured with your Sauce Labs credentials (SAUCE_USERNAME and SAUCE_ACCESS_KEY) and a unique tunnelName.
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          region: eu-central-1                 
          tunnelName: ${{ github.repository }}-${{ github.run_id }} #This proxy establishes a secure tunnel between Sauce Labs and your local environment. The tunnel-name is an identifier for the Sauce Connect tunnel. It can be any custom string you choose, but using tunnel-name: ${{ github.repository }}-${{ github.run_id }} ensures a unique name for each run of your GitHub Actions workflow. This is particularly useful in CI/CD environments to avoid conflicts between multiple concurrent runs and to easily trace which tunnel corresponds to which workflow run.
          # connectRetries: 3
          # connectRetryTimeout: 30000  # 30 seconds
          sauce-options: |    # The creation of the /tmp/sauce-connect directory is specifically for the GitHub Actions workflow environment and does not involve any changes to your local directory or filesystem. The purpose of creating this directory within the GitHub Actions workflow is to ensure that Sauce Connect has a location to write the PID (Process ID) file during its execution within the workflow. This step is necessary for Sauce Connect to function properly within the GitHub Actions environment.
            --pidfile=/tmp/sauce-connect/sc_client-${{ github.repository }}-${{ github.run_id }}.pid  
            
      - name: Check Sauce Connect Log
        run: cat /tmp/sauce-connect-action*/sauce-connect.log  
      
      # - name: Verify Sauce Connect Tunnel  # verify
      #   run: curl -v -I http://localhost:5173 --proxy 127.0.0.1:4445

      - name: Verify Sauce Connect Tunnel
        run: |
          echo "Verifying Sauce Connect Tunnel access to local server..."
          # Make a request to the local server through Sauce Connect tunnel
          curl -v -I http://localhost:5173 --proxy 127.0.0.1:39681

      - name: Saucectl RUN
        uses: saucelabs/saucectl-run-action@v3
        with:
          config-file: .sauce/config.yml
          tunnel-name: ${{ github.repository }}-${{ github.run_id }}
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

















# name: Sauce Labs Tests

# on:
#   push:
#     branches: [ main ]

# jobs:
#   test-job:
#     runs-on: ubuntu-latest  # Or your preferred runner

#     steps:
#       - name: Checkout GitHub App Code
#         uses: actions/checkout@v3
#       - name: Install Dependencies
#         run: npm install
#       - name: Set up Sauce Credentials
#         env:
#           SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
#           SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
#         run: |
#           echo "SAUCE_USERNAME=$SAUCE_USERNAME" >> $GITHUB_ENV  # Optional for visibility (remove if using secrets)
#           echo "SAUCE_ACCESS_KEY=*** (secure)" >> $GITHUB_ENV  # Mask access key

#       - name: Download Sauce Connect Proxy
#         uses: saucelabs/sauce-connect-action@v2  # Adjust version as needed
#         with:
#           username: ${{ env.SAUCE_USERNAME }}
#           accessKey: ${{ env.SAUCE_ACCESS_KEY }}

#       - name: Start Sauce Connect Tunnel (modify options as needed)
#         run: |
#           ./sauce-connect -u ${{ env.SAUCE_USERNAME }} \
#                           -k ${{ env.SAUCE_ACCESS_KEY }} \
#                           --tunnel-identifier my-tunnel-id \  # Optional custom identifier
#                           --no-ssl-bump-check  # Optional, disable SSL bump check for self-signed certs

#       - name: Run Your Local Server Tests (replace with your command)
#         run: |
#           # Replace with your local server startup command
#           npm run dev # Example for a Node.js server

#       - name: Stop Sauce Connect Tunnel
#         run: ./sauce-connect -q -a stop my-tunnel-id  # Quiet mode, stop using identifier

